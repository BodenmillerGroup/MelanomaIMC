---
title: "XX_RubenData"
author: "toobiwankenobi"
date: "2021-08-12"
output: workflowr::wflow_html
editor_options:
  chunk_output_type: console
---

## Introduction

```{r}
library(dplyr)
library(SingleCellExperiment)
library(ggplot2)
library(ggbeeswarm)
library(rstatix)
library(ggpubr)
library(ggrepel)
library(gridExtra)
library(data.table)
```

## Load data

```{r load_data}
sce <- readRDS(file = "/home/ubuntu/bbvolume/bbvolume/server_homes/rcasan/share/for Tobi/ZTMA257-258.rds")

# rename colnames to be cellID
sce$cellID <- paste(sce$ImageNumber, sce$ObjectNumber, sep = "_")
colnames(sce) <- sce$cellID
sce$id <- NULL

# only keep treatment naive patients
sce_sub <- sce[,sce$previous_treatment == "untreated"]
```

## Show numbers of responder (3M and 12M) 
```{r}
# Number of Images
data.frame(colData(sce_sub)) %>%
  distinct(ImageNumber, .keep_all = T) %>%
  group_by(Response_3M) %>%
  summarise(n=n())

data.frame(colData(sce_sub)) %>%
  distinct(ImageNumber, .keep_all = T) %>%
  group_by(Response_12M) %>%
  summarise(n=n())

# Number of Patients
data.frame(colData(sce_sub)) %>%
  distinct(PatNr, .keep_all = T) %>%
  group_by(Response_3M) %>%
  summarise(n=n())

data.frame(colData(sce_sub)) %>%
  distinct(PatNr, .keep_all = T) %>%
  group_by(Response_12M) %>%
  summarise(n=n())

# different outcome per patient
data.frame(colData(sce_sub)) %>%
  distinct(ImageNumber, .keep_all = T) %>%
  group_by(PatNr, Response_3M) %>%
  filter(Response_3M %in% c("R", "NR")) %>%
  summarise(n=n())
```

## Plot tumor marker levels in tumor cells of Responder vs. Non-Responder 3M

```{r}
tumor_marker <- c("MelanA", "gp100", "S100", "SOX10", "SOX9", "B2M")

# rna data 
dat <- data.frame(t(assay(sce_sub[tumor_marker, sce_sub$CT2 == "tumor"], "exprs.com0")))
dat$cellID <- substring(rownames(dat), 2)
dat <- left_join(data.frame(colData(sce_sub[,sce_sub$CT2 == "tumor"]))[,c("cellID", "Response_3M", "ImageNumber", "PatNr")], dat)

# filter - only responder vs. non-responder in previously untreated patients
dat <- dat %>%
  filter(Response_3M %in% c("R", "NR"))

dat$ImageNumber <- as.character(dat$ImageNumber)

# mean per image
dat <- dat %>%
  select(-cellID) %>%
  group_by(ImageNumber, PatNr, Response_3M) %>%
  summarise_if(is.numeric, mean, na.rm = TRUE)

# mean per patient (mean of image means)
dat2 <- dat %>%
  group_by(PatNr, Response_3M) %>%
  summarise_if(is.numeric, mean, na.rm = TRUE)

# melt
dat2 <- dat2 %>%
  reshape2::melt(id.vars = c("PatNr", "Response_3M"), variable.name = "channel", value.name = "asinh")

# statistical testing
stat.test <- dat2 %>%
  group_by(channel) %>%
  wilcox_test(data = ., asinh ~ Response_3M) %>%
  adjust_pvalue(method = "BH") %>%
  add_significance("p.adj",cutpoints = c(0, 1e-04, 0.001, 0.01, 0.1, 1)) %>%
  add_xy_position(x = "Response_3M", dodge = 0.8)

# plot 
ggplot(dat2, aes(x=Response_3M, y=asinh, label=PatNr)) + 
  geom_boxplot(alpha=0.2, lwd=1, aes(fill=Response_3M)) +
  geom_quasirandom(alpha=0.6, size=3, aes(col=Response_3M)) +
  #geom_text_repel() +
  scale_color_discrete(guide = FALSE) +
  theme_bw() +
  theme(text = element_text(size=16),
        legend.position = "none") +
  facet_wrap(~channel, scales = "free") + 
  stat_pvalue_manual(stat.test, label = "p.adj.signif", size = 7) + 
  ylab("Mean Expression (asinh)") + 
  xlab("") +
  scale_y_continuous(expand = expansion(mult = c(0.05, 0.2)))
```

## Fraction of CD8 T cells as additional information

```{r}
tcell <- data.frame(colData(sce_sub)) %>%
  group_by(ImageNumber, CT2) %>%
  summarise(n=n()) %>%
  mutate(fraction = n / sum(n)) %>%
  reshape2::dcast(ImageNumber ~ CT2, value.var = "fraction", fill = 0) %>%
  reshape2::melt(id.vars = "ImageNumber", variable.name = "celltype", value.name = "fraction") %>%
  filter(celltype == "CD8 T-cells")

tcell$ImageNumber <- as.character(tcell$ImageNumber)

dat3 <- left_join(dat, tcell)
dat3$celltype <- NULL

# melt
dat3 <- dat3 %>%
  reshape2::melt(id.vars = c("ImageNumber", "PatNr", "Response_3M", "fraction"), 
                 variable.name = "channel", value.name = "asinh")

stat.test <- dat3 %>%
  group_by(channel) %>%
  wilcox_test(data = ., asinh ~ Response_3M) %>%
  adjust_pvalue(method = "BH") %>%
  add_significance("p.adj",cutpoints = c(0, 1e-04, 0.001, 0.01, 0.1, 1)) %>%
  add_xy_position(x = "Response_3M", dodge = 0.8)

# plot 
a <- ggplot(dat3, aes(x=Response_3M, y=asinh, label=PatNr)) + 
  geom_boxplot(alpha=0.2, lwd=1, aes(fill=Response_3M)) +
  geom_quasirandom(alpha=0.6, aes(col=Response_3M, size=fraction)) +
  #geom_text_repel() +
  scale_color_discrete(guide = FALSE) +
  theme_bw() +
  theme(text = element_text(size=16),
        legend.position = "none") +
  facet_wrap(~channel, scales = "free") + 
  stat_pvalue_manual(stat.test, label = "p.adj.signif", size = 7) + 
  ylab("Mean Expression (asinh)") + 
  xlab("") +
  scale_y_continuous(expand = expansion(mult = c(0.05, 0.2)))

# same plot on patient level (mean fraction and mean channel intensity)
dat3 <- dat3 %>%
  group_by(PatNr, Response_3M, channel) %>%
  summarise_if(is.numeric, mean, na.rm = TRUE)

stat.test <- dat3 %>%
  group_by(channel) %>%
  wilcox_test(data = ., asinh ~ Response_3M) %>%
  adjust_pvalue(method = "BH") %>%
  add_significance("p.adj",cutpoints = c(0, 1e-04, 0.001, 0.01, 0.1, 1)) %>%
  add_xy_position(x = "Response_3M", dodge = 0.8)

b <- ggplot(dat3, aes(x=Response_3M, y=asinh, label=PatNr)) + 
  geom_boxplot(alpha=0.2, lwd=1, aes(fill=Response_3M)) +
  geom_quasirandom(alpha=0.6, aes(col=Response_3M, size=fraction)) +
  #geom_text_repel() +
  scale_color_discrete(guide = FALSE) +
  theme_bw() +
  theme(text = element_text(size=16)) +
  facet_wrap(~channel, scales = "free") + 
  stat_pvalue_manual(stat.test, label = "p.adj.signif", size = 7) + 
  ylab("Mean Expression (asinh)") + 
  xlab("") +
  scale_y_continuous(expand = expansion(mult = c(0.05, 0.2)))

grid.arrange(a,b, nrow=1)
```


